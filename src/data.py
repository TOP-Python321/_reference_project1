"""
Глобальные переменные и константы.
"""

# стандартная библиотека
from collections.abc import Callable
from pathlib import Path
from re import compile
from sys import argv


# переключатель для вывода отладочной информации — включается при передаче соответствующего аргумента командной строки
DEBUG: bool = argv[1:] == ['debug']
# словарь для хранения отладочной информации
debug_data: dict = {}

# пути к файлам данных
PLAYERS_PATH = Path(r'..\data\players.ini')
SAVES_PATH = Path(r'..\data\saves.txt')

# заголовок приложения
APP_TITLE = 'КРЕСТИКИ-НОЛИКИ'
# названия и способы ввода команд
COMMANDS = {
    'начать новую партию': ('new', 'n', 'начать', 'н'),
    'загрузить существующую партию': ('load', 'l', 'загрузка', 'з'),
    'отобразить раздел помощи': ('help', 'h', 'помощь', 'п'),
    'создать или переключиться на игрока': ('player', 'p', 'игрок', 'и'),
    'отобразить таблицу результатов': ('table', 't', 'таблица', 'т'),
    'изменить размер поля': ('dim', 'd', 'размер', 'р'),
    'выйти': ('quit', 'q', 'выход', 'в'),
}

# regex шаблон для имени игрока
NAME_PATTERN = compile(r'[A-Za-zА-ЯЁа-яё][A-Za-zА-ЯЁа-яё\d_]+')
# regex шаблон для размера игрового поля
DIM_PATTERN = compile(r'[3-9]|1[0-9]|20')

# имена игроков и их статистика
players_db: dict[str, dict[str, int]] = {}
# сохранённые партии
saves_db: dict[tuple[str, str], dict] = {}

# размер поля
dim: int = None
# числовая последовательность от 0 до размера поля
dim_range: range = None
# количество ячеек поля
all_cells: int = None
# числовая последовательность от 1 до количества ячеек поля
all_cells_range: range = None

# выигрышные комбинации
wins: list[set[int]] = []

# строковые представления токенов
TOKENS = ('X', 'O')

# вес собственного токена для матрицы весов занятых ячеек сложного бота
WEIGHT_OWN = 1.5
# вес токена соперника для матрицы весов занятых ячеек сложного бота
WEIGHT_FOE = 1.0

# начальные стратегические матрицы
START_MATRICES = ()

# текущий авторизованный игрок
authorized: str
# список активных игроков
players: list[str] = []
# ссылка на функцию, соответствующую уровню сложности бота
bot_level: Callable = None

# шаблон игрового поля
field: str = None
# игровое поле с номерами ячеек
field_with_coords: str = None

# словарь всех ячеек игрового поля --> номер: ' '
board: dict[int, str] = {}
# словарь сделанных ходов
turns: dict[int, str] = {}


# тексты запросов, ответов и сообщений
MESSAGES = {
    'ввод команды': '\n _ введите команду > ',
    'некорректная команда': ' ! используйте команды из списка ниже',

    'ввод имени': '\n _ введите имя игрока > ',
    'некорректное имя': ' ! имя игрока должно начинаться с буквы, содержать только буквы, цифры и символ подчёркивания',

    'ввод размерности': ' _ введите новый размер поля > ',
    'некорректная размерность': ' ! размер поля должен находиться в диапазоне от 3 до 20',

    'ввод режима': '\n _ выберите режим игры\n    1 - один человек\n    2 - два человека\n > ',
    'ввод уровня': '\n _ выберите уровень сложности\n    1 - низкий (бот делает случайные ходы)\n    2 - высокий (бот стремится выиграть)\n > ',
    'ввод токена': '\n _ выберите токен, которым хотите играть\n    1 - крестик\n    2 - нолик\n > ',
    'некорректный выбор': ' ! введите цифру 1 или 2',

    'ввод сохранения': '\n _ выберите сохранение\n{}',
    'некорректное сохранение': ' ! введите число от 1 до {}',
    'нет сохранений': ' ! у вас нет ни одного сохранения',

    'ввод хода': '\n _ введите номер свободной ячейки > ',
    'ход не число': ' ! номер ячейки должен быть числом',
    'ход не в диапазоне': f' ! номер ячейки должен находиться в диапазоне от 1 до {all_cells} включительно',
    'ход в занятую': ' ! ячейка занята',

    'победитель': 'побеждает игрок {}',
    'ничья': 'ничья',

    # '': '',
}
